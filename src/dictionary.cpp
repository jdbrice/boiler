//
// File generated by rootcint at Tue Nov 25 17:06:08 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIdictionary
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "dictionary.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      namespace jdb {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::jdb::HistoBook HistoBook;
      #else
      class HistoBook  {
         public:
         //friend XX;
         ::jdb::Logger* logger; //
         string currentDir; //
         map< ::string, ::string > configPath; //
         map< ::string, ::TH1* > book; //
         string filename; //
         ::TFile* file; //
         string styling; //
         string drawOption; //
         ::TLegend* legend; //
         ::jdb::XmlConfig* config; //
      };
      #endif
      } 
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void jdbcLcLLogger_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void jdbcLcLLogger_Dictionary();
   static void *new_jdbcLcLLogger(void *p = 0);
   static void *newArray_jdbcLcLLogger(Long_t size, void *p);
   static void delete_jdbcLcLLogger(void *p);
   static void deleteArray_jdbcLcLLogger(void *p);
   static void destruct_jdbcLcLLogger(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::jdb::Logger*)
   {
      ::jdb::Logger *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::jdb::Logger),0);
      static ::ROOT::TGenericClassInfo 
         instance("jdb::Logger", "./include/jdb/Logger.h", 18,
                  typeid(::jdb::Logger), DefineBehavior(ptr, ptr),
                  0, &jdbcLcLLogger_Dictionary, isa_proxy, 1,
                  sizeof(::jdb::Logger) );
      instance.SetNew(&new_jdbcLcLLogger);
      instance.SetNewArray(&newArray_jdbcLcLLogger);
      instance.SetDelete(&delete_jdbcLcLLogger);
      instance.SetDeleteArray(&deleteArray_jdbcLcLLogger);
      instance.SetDestructor(&destruct_jdbcLcLLogger);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::jdb::Logger*)
   {
      return GenerateInitInstanceLocal((::jdb::Logger*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::jdb::Logger*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void jdbcLcLLogger_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::jdb::Logger*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void jdbcLcLXmlConfig_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void jdbcLcLXmlConfig_Dictionary();
   static void delete_jdbcLcLXmlConfig(void *p);
   static void deleteArray_jdbcLcLXmlConfig(void *p);
   static void destruct_jdbcLcLXmlConfig(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::jdb::XmlConfig*)
   {
      ::jdb::XmlConfig *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::jdb::XmlConfig),0);
      static ::ROOT::TGenericClassInfo 
         instance("jdb::XmlConfig", "./include/jdb/XmlConfig.h", 40,
                  typeid(::jdb::XmlConfig), DefineBehavior(ptr, ptr),
                  0, &jdbcLcLXmlConfig_Dictionary, isa_proxy, 1,
                  sizeof(::jdb::XmlConfig) );
      instance.SetDelete(&delete_jdbcLcLXmlConfig);
      instance.SetDeleteArray(&deleteArray_jdbcLcLXmlConfig);
      instance.SetDestructor(&destruct_jdbcLcLXmlConfig);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::jdb::XmlConfig*)
   {
      return GenerateInitInstanceLocal((::jdb::XmlConfig*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::jdb::XmlConfig*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void jdbcLcLXmlConfig_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::jdb::XmlConfig*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void jdbcLcLReporter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void jdbcLcLReporter_Dictionary();
   static void delete_jdbcLcLReporter(void *p);
   static void deleteArray_jdbcLcLReporter(void *p);
   static void destruct_jdbcLcLReporter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::jdb::Reporter*)
   {
      ::jdb::Reporter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::jdb::Reporter),0);
      static ::ROOT::TGenericClassInfo 
         instance("jdb::Reporter", "./include/jdb/Reporter.h", 14,
                  typeid(::jdb::Reporter), DefineBehavior(ptr, ptr),
                  0, &jdbcLcLReporter_Dictionary, isa_proxy, 1,
                  sizeof(::jdb::Reporter) );
      instance.SetDelete(&delete_jdbcLcLReporter);
      instance.SetDeleteArray(&deleteArray_jdbcLcLReporter);
      instance.SetDestructor(&destruct_jdbcLcLReporter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::jdb::Reporter*)
   {
      return GenerateInitInstanceLocal((::jdb::Reporter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::jdb::Reporter*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void jdbcLcLReporter_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::jdb::Reporter*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void jdbcLcLChainLoader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void jdbcLcLChainLoader_Dictionary();
   static void *new_jdbcLcLChainLoader(void *p = 0);
   static void *newArray_jdbcLcLChainLoader(Long_t size, void *p);
   static void delete_jdbcLcLChainLoader(void *p);
   static void deleteArray_jdbcLcLChainLoader(void *p);
   static void destruct_jdbcLcLChainLoader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::jdb::ChainLoader*)
   {
      ::jdb::ChainLoader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::jdb::ChainLoader),0);
      static ::ROOT::TGenericClassInfo 
         instance("jdb::ChainLoader", "./include/jdb/ChainLoader.h", 18,
                  typeid(::jdb::ChainLoader), DefineBehavior(ptr, ptr),
                  0, &jdbcLcLChainLoader_Dictionary, isa_proxy, 1,
                  sizeof(::jdb::ChainLoader) );
      instance.SetNew(&new_jdbcLcLChainLoader);
      instance.SetNewArray(&newArray_jdbcLcLChainLoader);
      instance.SetDelete(&delete_jdbcLcLChainLoader);
      instance.SetDeleteArray(&deleteArray_jdbcLcLChainLoader);
      instance.SetDestructor(&destruct_jdbcLcLChainLoader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::jdb::ChainLoader*)
   {
      return GenerateInitInstanceLocal((::jdb::ChainLoader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::jdb::ChainLoader*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void jdbcLcLChainLoader_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::jdb::ChainLoader*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void jdbcLcLTaskTimer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void jdbcLcLTaskTimer_Dictionary();
   static void *new_jdbcLcLTaskTimer(void *p = 0);
   static void *newArray_jdbcLcLTaskTimer(Long_t size, void *p);
   static void delete_jdbcLcLTaskTimer(void *p);
   static void deleteArray_jdbcLcLTaskTimer(void *p);
   static void destruct_jdbcLcLTaskTimer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::jdb::TaskTimer*)
   {
      ::jdb::TaskTimer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::jdb::TaskTimer),0);
      static ::ROOT::TGenericClassInfo 
         instance("jdb::TaskTimer", "./include/jdb/Utils.h", 29,
                  typeid(::jdb::TaskTimer), DefineBehavior(ptr, ptr),
                  0, &jdbcLcLTaskTimer_Dictionary, isa_proxy, 1,
                  sizeof(::jdb::TaskTimer) );
      instance.SetNew(&new_jdbcLcLTaskTimer);
      instance.SetNewArray(&newArray_jdbcLcLTaskTimer);
      instance.SetDelete(&delete_jdbcLcLTaskTimer);
      instance.SetDeleteArray(&deleteArray_jdbcLcLTaskTimer);
      instance.SetDestructor(&destruct_jdbcLcLTaskTimer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::jdb::TaskTimer*)
   {
      return GenerateInitInstanceLocal((::jdb::TaskTimer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::jdb::TaskTimer*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void jdbcLcLTaskTimer_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::jdb::TaskTimer*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void jdbcLcLTaskProgress_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void jdbcLcLTaskProgress_Dictionary();
   static void *new_jdbcLcLTaskProgress(void *p = 0);
   static void *newArray_jdbcLcLTaskProgress(Long_t size, void *p);
   static void delete_jdbcLcLTaskProgress(void *p);
   static void deleteArray_jdbcLcLTaskProgress(void *p);
   static void destruct_jdbcLcLTaskProgress(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::jdb::TaskProgress*)
   {
      ::jdb::TaskProgress *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::jdb::TaskProgress),0);
      static ::ROOT::TGenericClassInfo 
         instance("jdb::TaskProgress", "./include/jdb/Utils.h", 149,
                  typeid(::jdb::TaskProgress), DefineBehavior(ptr, ptr),
                  0, &jdbcLcLTaskProgress_Dictionary, isa_proxy, 1,
                  sizeof(::jdb::TaskProgress) );
      instance.SetNew(&new_jdbcLcLTaskProgress);
      instance.SetNewArray(&newArray_jdbcLcLTaskProgress);
      instance.SetDelete(&delete_jdbcLcLTaskProgress);
      instance.SetDeleteArray(&deleteArray_jdbcLcLTaskProgress);
      instance.SetDestructor(&destruct_jdbcLcLTaskProgress);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::jdb::TaskProgress*)
   {
      return GenerateInitInstanceLocal((::jdb::TaskProgress*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::jdb::TaskProgress*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void jdbcLcLTaskProgress_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::jdb::TaskProgress*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void jdbcLcLHistoBins_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void jdbcLcLHistoBins_Dictionary();
   static void delete_jdbcLcLHistoBins(void *p);
   static void deleteArray_jdbcLcLHistoBins(void *p);
   static void destruct_jdbcLcLHistoBins(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::jdb::HistoBins*)
   {
      ::jdb::HistoBins *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::jdb::HistoBins),0);
      static ::ROOT::TGenericClassInfo 
         instance("jdb::HistoBins", "./include/jdb/HistoBins.h", 13,
                  typeid(::jdb::HistoBins), DefineBehavior(ptr, ptr),
                  0, &jdbcLcLHistoBins_Dictionary, isa_proxy, 1,
                  sizeof(::jdb::HistoBins) );
      instance.SetDelete(&delete_jdbcLcLHistoBins);
      instance.SetDeleteArray(&deleteArray_jdbcLcLHistoBins);
      instance.SetDestructor(&destruct_jdbcLcLHistoBins);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::jdb::HistoBins*)
   {
      return GenerateInitInstanceLocal((::jdb::HistoBins*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::jdb::HistoBins*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void jdbcLcLHistoBins_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::jdb::HistoBins*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void jdbcLcLHistoBook_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void jdbcLcLHistoBook_Dictionary();
   static void delete_jdbcLcLHistoBook(void *p);
   static void deleteArray_jdbcLcLHistoBook(void *p);
   static void destruct_jdbcLcLHistoBook(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::jdb::HistoBook*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::jdb::HistoBook) == sizeof(::ROOT::Shadow::jdb::HistoBook));
      ::jdb::HistoBook *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::jdb::HistoBook),0);
      static ::ROOT::TGenericClassInfo 
         instance("jdb::HistoBook", "./include/jdb/HistoBook.h", 69,
                  typeid(::jdb::HistoBook), DefineBehavior(ptr, ptr),
                  &jdbcLcLHistoBook_ShowMembers, &jdbcLcLHistoBook_Dictionary, isa_proxy, 4,
                  sizeof(::jdb::HistoBook) );
      instance.SetDelete(&delete_jdbcLcLHistoBook);
      instance.SetDeleteArray(&deleteArray_jdbcLcLHistoBook);
      instance.SetDestructor(&destruct_jdbcLcLHistoBook);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::jdb::HistoBook*)
   {
      return GenerateInitInstanceLocal((::jdb::HistoBook*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::jdb::HistoBook*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void jdbcLcLHistoBook_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::jdb::HistoBook*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void jdbcLcLLoggerConfig_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void jdbcLcLLoggerConfig_Dictionary();
   static void *new_jdbcLcLLoggerConfig(void *p = 0);
   static void *newArray_jdbcLcLLoggerConfig(Long_t size, void *p);
   static void delete_jdbcLcLLoggerConfig(void *p);
   static void deleteArray_jdbcLcLLoggerConfig(void *p);
   static void destruct_jdbcLcLLoggerConfig(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::jdb::LoggerConfig*)
   {
      ::jdb::LoggerConfig *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::jdb::LoggerConfig),0);
      static ::ROOT::TGenericClassInfo 
         instance("jdb::LoggerConfig", "./include/jdb/LoggerConfig.h", 15,
                  typeid(::jdb::LoggerConfig), DefineBehavior(ptr, ptr),
                  0, &jdbcLcLLoggerConfig_Dictionary, isa_proxy, 1,
                  sizeof(::jdb::LoggerConfig) );
      instance.SetNew(&new_jdbcLcLLoggerConfig);
      instance.SetNewArray(&newArray_jdbcLcLLoggerConfig);
      instance.SetDelete(&delete_jdbcLcLLoggerConfig);
      instance.SetDeleteArray(&deleteArray_jdbcLcLLoggerConfig);
      instance.SetDestructor(&destruct_jdbcLcLLoggerConfig);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::jdb::LoggerConfig*)
   {
      return GenerateInitInstanceLocal((::jdb::LoggerConfig*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::jdb::LoggerConfig*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void jdbcLcLLoggerConfig_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::jdb::LoggerConfig*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_jdbcLcLLogger(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::jdb::Logger : new ::jdb::Logger;
   }
   static void *newArray_jdbcLcLLogger(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::jdb::Logger[nElements] : new ::jdb::Logger[nElements];
   }
   // Wrapper around operator delete
   static void delete_jdbcLcLLogger(void *p) {
      delete ((::jdb::Logger*)p);
   }
   static void deleteArray_jdbcLcLLogger(void *p) {
      delete [] ((::jdb::Logger*)p);
   }
   static void destruct_jdbcLcLLogger(void *p) {
      typedef ::jdb::Logger current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::jdb::Logger

namespace ROOT {
   // Wrapper around operator delete
   static void delete_jdbcLcLReporter(void *p) {
      delete ((::jdb::Reporter*)p);
   }
   static void deleteArray_jdbcLcLReporter(void *p) {
      delete [] ((::jdb::Reporter*)p);
   }
   static void destruct_jdbcLcLReporter(void *p) {
      typedef ::jdb::Reporter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::jdb::Reporter

namespace ROOT {
   // Wrapper around operator delete
   static void delete_jdbcLcLXmlConfig(void *p) {
      delete ((::jdb::XmlConfig*)p);
   }
   static void deleteArray_jdbcLcLXmlConfig(void *p) {
      delete [] ((::jdb::XmlConfig*)p);
   }
   static void destruct_jdbcLcLXmlConfig(void *p) {
      typedef ::jdb::XmlConfig current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::jdb::XmlConfig

namespace ROOT {
   // Wrappers around operator new
   static void *new_jdbcLcLLoggerConfig(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::jdb::LoggerConfig : new ::jdb::LoggerConfig;
   }
   static void *newArray_jdbcLcLLoggerConfig(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::jdb::LoggerConfig[nElements] : new ::jdb::LoggerConfig[nElements];
   }
   // Wrapper around operator delete
   static void delete_jdbcLcLLoggerConfig(void *p) {
      delete ((::jdb::LoggerConfig*)p);
   }
   static void deleteArray_jdbcLcLLoggerConfig(void *p) {
      delete [] ((::jdb::LoggerConfig*)p);
   }
   static void destruct_jdbcLcLLoggerConfig(void *p) {
      typedef ::jdb::LoggerConfig current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::jdb::LoggerConfig

namespace ROOT {
   // Wrappers around operator new
   static void *new_jdbcLcLTaskTimer(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::jdb::TaskTimer : new ::jdb::TaskTimer;
   }
   static void *newArray_jdbcLcLTaskTimer(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::jdb::TaskTimer[nElements] : new ::jdb::TaskTimer[nElements];
   }
   // Wrapper around operator delete
   static void delete_jdbcLcLTaskTimer(void *p) {
      delete ((::jdb::TaskTimer*)p);
   }
   static void deleteArray_jdbcLcLTaskTimer(void *p) {
      delete [] ((::jdb::TaskTimer*)p);
   }
   static void destruct_jdbcLcLTaskTimer(void *p) {
      typedef ::jdb::TaskTimer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::jdb::TaskTimer

namespace ROOT {
   // Wrappers around operator new
   static void *new_jdbcLcLTaskProgress(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::jdb::TaskProgress : new ::jdb::TaskProgress;
   }
   static void *newArray_jdbcLcLTaskProgress(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::jdb::TaskProgress[nElements] : new ::jdb::TaskProgress[nElements];
   }
   // Wrapper around operator delete
   static void delete_jdbcLcLTaskProgress(void *p) {
      delete ((::jdb::TaskProgress*)p);
   }
   static void deleteArray_jdbcLcLTaskProgress(void *p) {
      delete [] ((::jdb::TaskProgress*)p);
   }
   static void destruct_jdbcLcLTaskProgress(void *p) {
      typedef ::jdb::TaskProgress current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::jdb::TaskProgress

namespace ROOT {
   // Wrappers around operator new
   static void *new_jdbcLcLChainLoader(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::jdb::ChainLoader : new ::jdb::ChainLoader;
   }
   static void *newArray_jdbcLcLChainLoader(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::jdb::ChainLoader[nElements] : new ::jdb::ChainLoader[nElements];
   }
   // Wrapper around operator delete
   static void delete_jdbcLcLChainLoader(void *p) {
      delete ((::jdb::ChainLoader*)p);
   }
   static void deleteArray_jdbcLcLChainLoader(void *p) {
      delete [] ((::jdb::ChainLoader*)p);
   }
   static void destruct_jdbcLcLChainLoader(void *p) {
      typedef ::jdb::ChainLoader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::jdb::ChainLoader

namespace ROOT {
   // Wrapper around operator delete
   static void delete_jdbcLcLHistoBins(void *p) {
      delete ((::jdb::HistoBins*)p);
   }
   static void deleteArray_jdbcLcLHistoBins(void *p) {
      delete [] ((::jdb::HistoBins*)p);
   }
   static void destruct_jdbcLcLHistoBins(void *p) {
      typedef ::jdb::HistoBins current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::jdb::HistoBins

//______________________________________________________________________________
namespace ROOT {
   void jdbcLcLHistoBook_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class jdb::HistoBook.
      typedef ::ROOT::Shadow::jdb::HistoBook ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::jdb::HistoBook*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*logger", &sobj->logger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "currentDir", (void*)&sobj->currentDir);
      R__insp.InspectMember("string", (void*)&sobj->currentDir, "currentDir.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "configPath", (void*)&sobj->configPath);
      R__insp.InspectMember("map<string,string>", (void*)&sobj->configPath, "configPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "book", (void*)&sobj->book);
      R__insp.InspectMember("map<string,TH1*>", (void*)&sobj->book, "book.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "filename", (void*)&sobj->filename);
      R__insp.InspectMember("string", (void*)&sobj->filename, "filename.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*file", &sobj->file);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "styling", (void*)&sobj->styling);
      R__insp.InspectMember("string", (void*)&sobj->styling, "styling.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "drawOption", (void*)&sobj->drawOption);
      R__insp.InspectMember("string", (void*)&sobj->drawOption, "drawOption.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*legend", &sobj->legend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*config", &sobj->config);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_jdbcLcLHistoBook(void *p) {
      delete ((::jdb::HistoBook*)p);
   }
   static void deleteArray_jdbcLcLHistoBook(void *p) {
      delete [] ((::jdb::HistoBook*)p);
   }
   static void destruct_jdbcLcLHistoBook(void *p) {
      typedef ::jdb::HistoBook current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::jdb::HistoBook

namespace ROOT {
   void maplEstringcOTH1mUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOTH1mUgR_Dictionary();
   static void *new_maplEstringcOTH1mUgR(void *p = 0);
   static void *newArray_maplEstringcOTH1mUgR(Long_t size, void *p);
   static void delete_maplEstringcOTH1mUgR(void *p);
   static void deleteArray_maplEstringcOTH1mUgR(void *p);
   static void destruct_maplEstringcOTH1mUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,TH1*>*)
   {
      map<string,TH1*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,TH1*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,TH1*>", -2, "/Users/danielbrandenburg/bnl/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<string,TH1*>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOTH1mUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,TH1*>) );
      instance.SetNew(&new_maplEstringcOTH1mUgR);
      instance.SetNewArray(&newArray_maplEstringcOTH1mUgR);
      instance.SetDelete(&delete_maplEstringcOTH1mUgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOTH1mUgR);
      instance.SetDestructor(&destruct_maplEstringcOTH1mUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,TH1*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,TH1*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOTH1mUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,TH1*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOTH1mUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,TH1*> : new map<string,TH1*>;
   }
   static void *newArray_maplEstringcOTH1mUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,TH1*>[nElements] : new map<string,TH1*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOTH1mUgR(void *p) {
      delete ((map<string,TH1*>*)p);
   }
   static void deleteArray_maplEstringcOTH1mUgR(void *p) {
      delete [] ((map<string,TH1*>*)p);
   }
   static void destruct_maplEstringcOTH1mUgR(void *p) {
      typedef map<string,TH1*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,TH1*>

namespace ROOT {
   void maplEstringcOstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOstringgR_Dictionary();
   static void *new_maplEstringcOstringgR(void *p = 0);
   static void *newArray_maplEstringcOstringgR(Long_t size, void *p);
   static void delete_maplEstringcOstringgR(void *p);
   static void deleteArray_maplEstringcOstringgR(void *p);
   static void destruct_maplEstringcOstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,string>*)
   {
      map<string,string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,string>", -2, "/Users/danielbrandenburg/bnl/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<string,string>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOstringgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,string>) );
      instance.SetNew(&new_maplEstringcOstringgR);
      instance.SetNewArray(&newArray_maplEstringcOstringgR);
      instance.SetDelete(&delete_maplEstringcOstringgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOstringgR);
      instance.SetDestructor(&destruct_maplEstringcOstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,string> : new map<string,string>;
   }
   static void *newArray_maplEstringcOstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,string>[nElements] : new map<string,string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOstringgR(void *p) {
      delete ((map<string,string>*)p);
   }
   static void deleteArray_maplEstringcOstringgR(void *p) {
      delete [] ((map<string,string>*)p);
   }
   static void destruct_maplEstringcOstringgR(void *p) {
      typedef map<string,string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,string>

/********************************************************
* src/dictionary.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtabledictionary();

extern "C" void G__set_cpp_environmentdictionary() {
  G__cpp_reset_tagtabledictionary();
}
#include <new>
extern "C" int G__cpp_dllrevdictionary() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* jdb::Logger */
static int G__dictionary_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jdb::Logger::getGlobalLogLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      jdb::Logger::setGlobalLogLevel((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::Logger* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new jdb::Logger(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (ostream*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) jdb::Logger(
(int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (ostream*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLLogger));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::Logger* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::Logger((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) jdb::Logger((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::Logger((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) jdb::Logger((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new jdb::Logger[n];
       } else {
         p = new((void*) gvp) jdb::Logger[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new jdb::Logger;
       } else {
         p = new((void*) gvp) jdb::Logger;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLLogger));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jdb::Logger*) G__getstructoffset())->getLogLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::Logger*) G__getstructoffset())->setLogLevel((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((jdb::Logger*) G__getstructoffset())->getClassSpace();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_169_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::Logger*) G__getstructoffset())->setClassSpace(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_169_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const ostream& obj = ((jdb::Logger*) G__getstructoffset())->warn(*((string*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const ostream& obj = ((jdb::Logger*) G__getstructoffset())->warn();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const ostream& obj = ((jdb::Logger*) G__getstructoffset())->error(*((string*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const ostream& obj = ((jdb::Logger*) G__getstructoffset())->error();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const ostream& obj = ((jdb::Logger*) G__getstructoffset())->info(*((string*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const ostream& obj = ((jdb::Logger*) G__getstructoffset())->info();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jdb::Logger::logLevelFromString(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef jdb::Logger G__TjdbcLcLLogger;
static int G__dictionary_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (jdb::Logger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((jdb::Logger*) (soff+(sizeof(jdb::Logger)*i)))->~G__TjdbcLcLLogger();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (jdb::Logger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((jdb::Logger*) (soff))->~G__TjdbcLcLLogger();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* jdb::XmlConfig */
static int G__dictionary_504_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::XmlConfig* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new jdb::XmlConfig(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) jdb::XmlConfig(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLXmlConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_504_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((jdb::XmlConfig*) G__getstructoffset())->makeMap((TXMLNode*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((jdb::XmlConfig*) G__getstructoffset())->makeMap((TXMLNode*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_504_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         string* pobj;
         string xobj = ((jdb::XmlConfig*) G__getstructoffset())->getString(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         string* pobj;
         string xobj = ((jdb::XmlConfig*) G__getstructoffset())->getString(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_504_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string>* pobj;
         vector<string> xobj = ((jdb::XmlConfig*) G__getstructoffset())->getStringVector(*((string*) G__int(libp->para[0])));
         pobj = new vector<string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_504_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((jdb::XmlConfig*) G__getstructoffset())->getInt(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((jdb::XmlConfig*) G__getstructoffset())->getInt(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_504_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((jdb::XmlConfig*) G__getstructoffset())->getIntVector(*((string*) G__int(libp->para[0])));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_504_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((jdb::XmlConfig*) G__getstructoffset())->getDouble(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((jdb::XmlConfig*) G__getstructoffset())->getDouble(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_504_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((jdb::XmlConfig*) G__getstructoffset())->getDoubleVector(*((string*) G__int(libp->para[0])));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_504_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 102, (double) ((jdb::XmlConfig*) G__getstructoffset())->getFloat(*((string*) G__int(libp->para[0])), (float) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((jdb::XmlConfig*) G__getstructoffset())->getFloat(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_504_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((jdb::XmlConfig*) G__getstructoffset())->getBool(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((jdb::XmlConfig*) G__getstructoffset())->getBool(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_504_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((jdb::XmlConfig*) G__getstructoffset())->manualToLower(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_504_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((jdb::XmlConfig*) G__getstructoffset())->exists(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_504_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         vector<string>* pobj;
         vector<string> xobj = ((jdb::XmlConfig*) G__getstructoffset())->childrenOf(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
         pobj = new vector<string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         vector<string>* pobj;
         vector<string> xobj = ((jdb::XmlConfig*) G__getstructoffset())->childrenOf(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
         pobj = new vector<string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         vector<string>* pobj;
         vector<string> xobj = ((jdb::XmlConfig*) G__getstructoffset())->childrenOf(*((string*) G__int(libp->para[0])));
         pobj = new vector<string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_504_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string>* pobj;
         vector<string> xobj = ((jdb::XmlConfig*) G__getstructoffset())->attributesOf(*((string*) G__int(libp->para[0])));
         pobj = new vector<string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_504_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string>* pobj;
         vector<string> xobj = ((jdb::XmlConfig*) G__getstructoffset())->getNodes(*((string*) G__int(libp->para[0])));
         pobj = new vector<string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_504_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string>* pobj;
         vector<string> xobj = ((jdb::XmlConfig*) G__getstructoffset())->split(*(string*) libp->para[0].ref, (char) G__int(libp->para[1]));
         pobj = new vector<string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_504_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         string* pobj;
         string xobj = ((jdb::XmlConfig*) G__getstructoffset())->trim(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         string* pobj;
         string xobj = ((jdb::XmlConfig*) G__getstructoffset())->trim(*(string*) libp->para[0].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_504_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((jdb::XmlConfig*) G__getstructoffset())->sanitize(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_504_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((jdb::XmlConfig*) G__getstructoffset())->operator[](*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_504_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((jdb::XmlConfig*) G__getstructoffset())->tagName(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_504_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((jdb::XmlConfig*) G__getstructoffset())->attributeName(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef jdb::XmlConfig G__TjdbcLcLXmlConfig;
static int G__dictionary_504_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (jdb::XmlConfig*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((jdb::XmlConfig*) (soff+(sizeof(jdb::XmlConfig)*i)))->~G__TjdbcLcLXmlConfig();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (jdb::XmlConfig*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((jdb::XmlConfig*) (soff))->~G__TjdbcLcLXmlConfig();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* jdb::Reporter */
static int G__dictionary_527_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::Reporter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::Reporter(
*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) jdb::Reporter(
*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::Reporter(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) jdb::Reporter(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::Reporter(*((string*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) jdb::Reporter(*((string*) G__int(libp->para[0])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLReporter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_527_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::Reporter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::Reporter(
(jdb::XmlConfig*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) jdb::Reporter(
(jdb::XmlConfig*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::Reporter((jdb::XmlConfig*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) jdb::Reporter((jdb::XmlConfig*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLReporter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_527_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((jdb::Reporter*) G__getstructoffset())->newPage((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((jdb::Reporter*) G__getstructoffset())->newPage((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((jdb::Reporter*) G__getstructoffset())->newPage();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_527_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::Reporter*) G__getstructoffset())->cd((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_527_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::Reporter*) G__getstructoffset())->cd((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_527_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::Reporter*) G__getstructoffset())->next();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_527_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((jdb::Reporter*) G__getstructoffset())->savePage(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((jdb::Reporter*) G__getstructoffset())->savePage();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_527_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::Reporter*) G__getstructoffset())->saveImage(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dictionary_527_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   jdb::Reporter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new jdb::Reporter(*(jdb::Reporter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLReporter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef jdb::Reporter G__TjdbcLcLReporter;
static int G__dictionary_527_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (jdb::Reporter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((jdb::Reporter*) (soff+(sizeof(jdb::Reporter)*i)))->~G__TjdbcLcLReporter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (jdb::Reporter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((jdb::Reporter*) (soff))->~G__TjdbcLcLReporter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dictionary_527_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::Reporter* dest = (jdb::Reporter*) G__getstructoffset();
   *dest = *(jdb::Reporter*) libp->para[0].ref;
   const jdb::Reporter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* jdb::ChainLoader */
static int G__dictionary_611_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      jdb::ChainLoader::load((TChain*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      jdb::ChainLoader::load((TChain*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_611_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      jdb::ChainLoader::loadList((TChain*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      jdb::ChainLoader::loadList((TChain*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__dictionary_611_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::ChainLoader *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::ChainLoader[n];
     } else {
       p = new((void*) gvp) jdb::ChainLoader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::ChainLoader;
     } else {
       p = new((void*) gvp) jdb::ChainLoader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLChainLoader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dictionary_611_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   jdb::ChainLoader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new jdb::ChainLoader(*(jdb::ChainLoader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLChainLoader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef jdb::ChainLoader G__TjdbcLcLChainLoader;
static int G__dictionary_611_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (jdb::ChainLoader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((jdb::ChainLoader*) (soff+(sizeof(jdb::ChainLoader)*i)))->~G__TjdbcLcLChainLoader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (jdb::ChainLoader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((jdb::ChainLoader*) (soff))->~G__TjdbcLcLChainLoader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dictionary_611_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::ChainLoader* dest = (jdb::ChainLoader*) G__getstructoffset();
   const jdb::ChainLoader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* jdb::TaskTimer */
static int G__dictionary_615_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::TaskTimer*) G__getstructoffset())->start();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_615_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((jdb::TaskTimer*) G__getstructoffset())->elapsed());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__dictionary_615_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::TaskTimer *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::TaskTimer[n];
     } else {
       p = new((void*) gvp) jdb::TaskTimer[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::TaskTimer;
     } else {
       p = new((void*) gvp) jdb::TaskTimer;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLTaskTimer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dictionary_615_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   jdb::TaskTimer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new jdb::TaskTimer(*(jdb::TaskTimer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLTaskTimer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef jdb::TaskTimer G__TjdbcLcLTaskTimer;
static int G__dictionary_615_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (jdb::TaskTimer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((jdb::TaskTimer*) (soff+(sizeof(jdb::TaskTimer)*i)))->~G__TjdbcLcLTaskTimer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (jdb::TaskTimer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((jdb::TaskTimer*) (soff))->~G__TjdbcLcLTaskTimer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dictionary_615_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::TaskTimer* dest = (jdb::TaskTimer*) G__getstructoffset();
   *dest = *(jdb::TaskTimer*) libp->para[0].ref;
   const jdb::TaskTimer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* jdb::TaskProgress */
static int G__dictionary_616_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::TaskProgress* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::TaskProgress[n];
     } else {
       p = new((void*) gvp) jdb::TaskProgress[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::TaskProgress;
     } else {
       p = new((void*) gvp) jdb::TaskProgress;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLTaskProgress));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_616_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::TaskProgress* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::TaskProgress(
*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) jdb::TaskProgress(
*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::TaskProgress(
*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) jdb::TaskProgress(
*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::TaskProgress(
*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) jdb::TaskProgress(
*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::TaskProgress(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) jdb::TaskProgress(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::TaskProgress(*((string*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) jdb::TaskProgress(*((string*) G__int(libp->para[0])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLTaskProgress));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_616_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::TaskProgress*) G__getstructoffset())->showProgress((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dictionary_616_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   jdb::TaskProgress* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new jdb::TaskProgress(*(jdb::TaskProgress*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLTaskProgress));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef jdb::TaskProgress G__TjdbcLcLTaskProgress;
static int G__dictionary_616_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (jdb::TaskProgress*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((jdb::TaskProgress*) (soff+(sizeof(jdb::TaskProgress)*i)))->~G__TjdbcLcLTaskProgress();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (jdb::TaskProgress*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((jdb::TaskProgress*) (soff))->~G__TjdbcLcLTaskProgress();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dictionary_616_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::TaskProgress* dest = (jdb::TaskProgress*) G__getstructoffset();
   *dest = *(jdb::TaskProgress*) libp->para[0].ref;
   const jdb::TaskProgress& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* jdb::HistoBins */
static int G__dictionary_617_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = jdb::HistoBins::makeNBins((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_617_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = jdb::HistoBins::makeFixedWidthBins((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_617_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jdb::HistoBins::findBin(*(vector<double>*) libp->para[0].ref, (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_617_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jdb::HistoBins*) G__getstructoffset())->findBin((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_617_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jdb::HistoBins*) G__getstructoffset())->length());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_617_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jdb::HistoBins*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_617_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jdb::HistoBins*) G__getstructoffset())->nBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_617_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::HistoBins* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new jdb::HistoBins(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) jdb::HistoBins(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBins));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_617_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::HistoBins* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new jdb::HistoBins(*((vector<double>*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) jdb::HistoBins(*((vector<double>*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBins));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_617_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::HistoBins* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::HistoBins(
(jdb::XmlConfig*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) jdb::HistoBins(
(jdb::XmlConfig*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::HistoBins((jdb::XmlConfig*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) jdb::HistoBins((jdb::XmlConfig*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBins));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_617_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((jdb::HistoBins*) G__getstructoffset())->operator[]((const int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_617_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((jdb::HistoBins*) G__getstructoffset())->toString();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dictionary_617_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   jdb::HistoBins* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new jdb::HistoBins(*(jdb::HistoBins*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBins));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef jdb::HistoBins G__TjdbcLcLHistoBins;
static int G__dictionary_617_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (jdb::HistoBins*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((jdb::HistoBins*) (soff+(sizeof(jdb::HistoBins)*i)))->~G__TjdbcLcLHistoBins();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (jdb::HistoBins*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((jdb::HistoBins*) (soff))->~G__TjdbcLcLHistoBins();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dictionary_617_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::HistoBins* dest = (jdb::HistoBins*) G__getstructoffset();
   *dest = *(jdb::HistoBins*) libp->para[0].ref;
   const jdb::HistoBins& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* jdb::HistoBook */
static int G__dictionary_703_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = jdb::HistoBook::makeNBins((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = jdb::HistoBook::makeFixedWidthBins((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) jdb::HistoBook::findBin(*(vector<double>*) libp->para[0].ref, (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::HistoBook* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::HistoBook(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) jdb::HistoBook(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::HistoBook(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) jdb::HistoBook(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::HistoBook(*((string*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) jdb::HistoBook(*((string*) G__int(libp->para[0])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBook));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::HistoBook* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::HistoBook(
*((string*) G__int(libp->para[0])), (jdb::XmlConfig*) G__int(libp->para[1])
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3])));
     } else {
       p = new((void*) gvp) jdb::HistoBook(
*((string*) G__int(libp->para[0])), (jdb::XmlConfig*) G__int(libp->para[1])
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3])));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::HistoBook(
*((string*) G__int(libp->para[0])), (jdb::XmlConfig*) G__int(libp->para[1])
, *((string*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) jdb::HistoBook(
*((string*) G__int(libp->para[0])), (jdb::XmlConfig*) G__int(libp->para[1])
, *((string*) G__int(libp->para[2])));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::HistoBook(*((string*) G__int(libp->para[0])), (jdb::XmlConfig*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) jdb::HistoBook(*((string*) G__int(libp->para[0])), (jdb::XmlConfig*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBook));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         string* pobj;
         string xobj = ((jdb::HistoBook*) G__getstructoffset())->cd(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         string* pobj;
         string xobj = ((jdb::HistoBook*) G__getstructoffset())->cd();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::HistoBook*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), (TH1*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->get(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->get(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->get2D(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->get2D(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->get3D(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->get3D(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((jdb::HistoBook*) G__getstructoffset())->fill(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((jdb::HistoBook*) G__getstructoffset())->fill(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::HistoBook*) G__getstructoffset())->make1F(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::HistoBook*) G__getstructoffset())->make1D(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::HistoBook*) G__getstructoffset())->make1D(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::HistoBook*) G__getstructoffset())->make2D(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::HistoBook*) G__getstructoffset())->make2D(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::HistoBook*) G__getstructoffset())->make2D(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (int) G__int(libp->para[5])
, (Double_t*) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::HistoBook*) G__getstructoffset())->make2D(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::HistoBook*) G__getstructoffset())->make((jdb::XmlConfig*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::HistoBook*) G__getstructoffset())->make(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::HistoBook*) G__getstructoffset())->makeAll(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::HistoBook*) G__getstructoffset())->makeAll((jdb::XmlConfig*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::HistoBook*) G__getstructoffset())->clone(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->getLegend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->draw(*((string*) G__int(libp->para[0])), (Option_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->draw(*((string*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->draw());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->clearLegend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->getDirectory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((jdb::HistoBook*) G__getstructoffset())->save();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->style(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->set(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3]))
, *((string*) G__int(libp->para[4]))));
      break;
   case 4:
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->set(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3]))));
      break;
   case 3:
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->set(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->set(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->set(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->set(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->set(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->set(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->set((jdb::XmlConfig*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->set(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->set(*((string*) G__int(libp->para[0])), *((vector<string>*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->exportAs(*((string*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 85, (long) ((jdb::HistoBook*) G__getstructoffset())->exportAs());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((jdb::HistoBook*) G__getstructoffset())->exists(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 103, (long) ((jdb::HistoBook*) G__getstructoffset())->exists(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_703_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((jdb::HistoBook*) G__getstructoffset())->color(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dictionary_703_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   jdb::HistoBook* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new jdb::HistoBook(*(jdb::HistoBook*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBook));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef jdb::HistoBook G__TjdbcLcLHistoBook;
static int G__dictionary_703_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (jdb::HistoBook*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((jdb::HistoBook*) (soff+(sizeof(jdb::HistoBook)*i)))->~G__TjdbcLcLHistoBook();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (jdb::HistoBook*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((jdb::HistoBook*) (soff))->~G__TjdbcLcLHistoBook();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dictionary_703_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::HistoBook* dest = (jdb::HistoBook*) G__getstructoffset();
   *dest = *(jdb::HistoBook*) libp->para[0].ref;
   const jdb::HistoBook& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* jdb::LoggerConfig */
static int G__dictionary_711_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::LoggerConfig* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::LoggerConfig[n];
     } else {
       p = new((void*) gvp) jdb::LoggerConfig[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new jdb::LoggerConfig;
     } else {
       p = new((void*) gvp) jdb::LoggerConfig;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLLoggerConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_711_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) jdb::LoggerConfig::makeLogger((jdb::XmlConfig*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dictionary_711_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   jdb::LoggerConfig* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new jdb::LoggerConfig(*(jdb::LoggerConfig*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLLoggerConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef jdb::LoggerConfig G__TjdbcLcLLoggerConfig;
static int G__dictionary_711_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (jdb::LoggerConfig*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((jdb::LoggerConfig*) (soff+(sizeof(jdb::LoggerConfig)*i)))->~G__TjdbcLcLLoggerConfig();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (jdb::LoggerConfig*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((jdb::LoggerConfig*) (soff))->~G__TjdbcLcLLoggerConfig();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dictionary_711_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   jdb::LoggerConfig* dest = (jdb::LoggerConfig*) G__getstructoffset();
   const jdb::LoggerConfig& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* jdb::Logger */

/* jdb::XmlConfig */

/* jdb::Reporter */

/* jdb::ChainLoader */

/* jdb::TaskTimer */

/* jdb::TaskProgress */

/* jdb::HistoBins */

/* jdb::HistoBook */

/* jdb::LoggerConfig */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncdictionary {
 public:
  G__Sizep2memfuncdictionary(): p(&G__Sizep2memfuncdictionary::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncdictionary::*p)();
};

size_t G__get_sizep2memfuncdictionary()
{
  G__Sizep2memfuncdictionary a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancedictionary() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetabledictionary() {

   /* Setting up typedef entry */
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__dictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__dictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__dictionaryLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__dictionaryLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__dictionaryLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__dictionaryLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool>",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool,less<string> >",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map_it_type",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLXmlConfig));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__dictionaryLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__dictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__dictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__dictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__dictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__dictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__dictionaryLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__dictionaryLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__dictionaryLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__dictionaryLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1*>",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1*,less<string> >",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* jdb::Logger */
static void G__setup_memvarjdbcLcLLogger(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLLogger));
   { jdb::Logger *p; p=(jdb::Logger*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("llAll=%lldLL",(long long)jdb::Logger::llAll).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("llInfo=%lldLL",(long long)jdb::Logger::llInfo).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("llWarn=%lldLL",(long long)jdb::Logger::llWarn).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("llError=%lldLL",(long long)jdb::Logger::llError).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("llNone=%lldLL",(long long)jdb::Logger::llNone).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("llDefault=%lldLL",(long long)jdb::Logger::llDefault).data(),0,(char*)NULL);
   G__memvar_setup((void*)(&jdb::Logger::llGlobal),105,0,0,-1,-1,-2,1,"llGlobal=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"logLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictionaryLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ostream"),-1,2,"os=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLLoggercLcLNullStream),-1,-1,2,"ns=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_string),-1,-1,2,"cSpace=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* jdb::XmlConfig */
static void G__setup_memvarjdbcLcLXmlConfig(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLXmlConfig));
   { jdb::XmlConfig *p; p=(jdb::XmlConfig*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLLogger),-1,-1,2,"logger=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),G__defined_typename("map<string,bool>"),-1,2,"nodeExists=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),G__defined_typename("map<string,string>"),-1,2,"data=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_string),-1,-1,2,"filename=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictionaryLN_TXMLDocument),-1,-1,2,"doc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictionaryLN_TXMLNode),-1,-1,2,"rootNode=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"attrDelim=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"pathDelim=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_string),-1,-1,2,"indexOpenDelim=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_string),-1,-1,2,"indexCloseDelim=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* jdb::Reporter */
static void G__setup_memvarjdbcLcLReporter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLReporter));
   { jdb::Reporter *p; p=(jdb::Reporter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLXmlConfig),-1,-1,2,"cfg=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_string),-1,-1,2,"nodePath=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLLogger),-1,-1,2,"logger=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictionaryLN_TCanvas),-1,-1,2,"canvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"currentPad=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"dx=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"dy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_string),-1,-1,2,"filename=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-2,2,"instances=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* jdb::ChainLoader */
static void G__setup_memvarjdbcLcLChainLoader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLChainLoader));
   { jdb::ChainLoader *p; p=(jdb::ChainLoader*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* jdb::TaskTimer */
static void G__setup_memvarjdbcLcLTaskTimer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLTaskTimer));
   { jdb::TaskTimer *p; p=(jdb::TaskTimer*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->startTime)-(long)(p)),107,0,0,-1,G__defined_typename("clock_t"),-1,1,"startTime=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* jdb::TaskProgress */
static void G__setup_memvarjdbcLcLTaskProgress(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLTaskProgress));
   { jdb::TaskProgress *p; p=(jdb::TaskProgress*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"max=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"barWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"showTitle=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"showElapsed=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_string),-1,-1,2,"title=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLTaskTimer),-1,-1,2,"tt=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* jdb::HistoBins */
static void G__setup_memvarjdbcLcLHistoBins(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBins));
   { jdb::HistoBins *p; p=(jdb::HistoBins*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->bins)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"bins=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->width)-(long)(p)),100,0,0,-1,-1,-1,1,"width=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->min)-(long)(p)),100,0,0,-1,-1,-1,1,"min=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->max)-(long)(p)),100,0,0,-1,-1,-1,1,"max=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* jdb::HistoBook */
static void G__setup_memvarjdbcLcLHistoBook(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBook));
   { jdb::HistoBook *p; p=(jdb::HistoBook*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLLogger),-1,-1,2,"logger=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_string),-1,-1,2,"currentDir=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),G__defined_typename("map<string,string>"),-1,2,"configPath=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),G__defined_typename("map<string,TH1*>"),-1,2,"book=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_string),-1,-1,2,"filename=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictionaryLN_TFile),-1,-1,2,"file=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_string),-1,-1,2,"styling=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_string),-1,-1,2,"drawOption=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictionaryLN_TLegend),-1,-1,2,"legend=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLXmlConfig),-1,-1,2,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* jdb::LoggerConfig */
static void G__setup_memvarjdbcLcLLoggerConfig(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLLoggerConfig));
   { jdb::LoggerConfig *p; p=(jdb::LoggerConfig*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvardictionary() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncjdbcLcLLogger(void) {
   /* jdb::Logger */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLLogger));
   G__memfunc_setup("getGlobalLogLevel",1707,G__dictionary_169_0_1, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&jdb::Logger::getGlobalLogLevel) ), 0);
   G__memfunc_setup("setGlobalLogLevel",1719,G__dictionary_169_0_2, 121, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - ll", (char*)NULL, (void*) G__func2void( (void (*)(int))(&jdb::Logger::setGlobalLogLevel) ), 0);
   G__memfunc_setup("Logger",608,G__dictionary_169_0_3, 105, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLLogger), -1, 0, 3, 1, 1, 0, 
"i - - 0 - ll u 'string' - 0 - cs "
"U 'basic_ostream<char,char_traits<char> >' 'ostream' 0 - oss", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Logger",608,G__dictionary_169_0_4, 105, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLLogger), -1, 0, 2, 1, 1, 0, 
"i - - 0 'Logger::getGlobalLogLevel()' ll u 'string' - 0 '\"\"' cs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLogLevel",1114,G__dictionary_169_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLogLevel",1126,G__dictionary_169_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ll", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClassSpace",1314,G__dictionary_169_0_7, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setClassSpace",1326,G__dictionary_169_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - cs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("warn",440,G__dictionary_169_0_9, 117, G__get_linked_tagnum(&G__dictionaryLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 0, "u 'string' - 0 '\"\"' functionName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("error",554,G__dictionary_169_0_10, 117, G__get_linked_tagnum(&G__dictionaryLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 0, "u 'string' - 0 '\"\"' functionName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("info",428,G__dictionary_169_0_11, 117, G__get_linked_tagnum(&G__dictionaryLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 0, "u 'string' - 0 '\"\"' functionName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("logLevelFromString",1861,G__dictionary_169_0_12, 105, -1, -1, 0, 1, 3, 1, 0, "u 'string' - 0 - ll", (char*)NULL, (void*) G__func2void( (int (*)(string))(&jdb::Logger::logLevelFromString) ), 0);
   G__memfunc_setup("preMessage",1036,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'string' - 0 '\"\"' level u 'string' - 0 '\"\"' functionName", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Logger", 734, G__dictionary_169_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncjdbcLcLXmlConfig(void) {
   /* jdb::XmlConfig */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLXmlConfig));
   G__memfunc_setup("XmlConfig",903,G__dictionary_504_0_1, 105, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLXmlConfig), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeMap",700,G__dictionary_504_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TXMLNode' - 0 - parent u 'string' - 0 '\"\"' cp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getString",951,G__dictionary_504_0_3, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - nodePath u 'string' - 0 '\"\"' def", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStringVector",1578,G__dictionary_504_0_4, 117, G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<string>"), 0, 1, 1, 1, 0, "u 'string' - 0 - nodePath", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInt",619,G__dictionary_504_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - nodePath i - - 0 '0' def", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIntVector",1246,G__dictionary_504_0_6, 117, G__get_linked_tagnum(&G__dictionaryLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 0, "u 'string' - 0 - nodePath", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDouble",923,G__dictionary_504_0_7, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - nodePath d - - 0 '0' def", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDoubleVector",1550,G__dictionary_504_0_8, 117, G__get_linked_tagnum(&G__dictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "u 'string' - 0 - nodePath", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFloat",822,G__dictionary_504_0_9, 102, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - nodePath f - - 0 '0' def", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBool",716,G__dictionary_504_0_10, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - nodePath g - - 0 'false' def", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("manualToLower",1354,G__dictionary_504_0_11, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("exists",672,G__dictionary_504_0_12, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - nodePath", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("childrenOf",1022,G__dictionary_504_0_13, 117, G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<string>"), 0, 3, 1, 1, 0, 
"u 'string' - 0 - nodePath i - - 0 '-1' depth "
"g - - 0 'false' attrs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("attributesOf",1276,G__dictionary_504_0_14, 117, G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<string>"), 0, 1, 1, 1, 0, "u 'string' - 0 - nodePath", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNodes",825,G__dictionary_504_0_15, 117, G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<string>"), 0, 1, 1, 1, 0, "u 'string' - 0 - nodePath", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("split",556,G__dictionary_504_0_16, 117, G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<string>"), 0, 2, 1, 1, 0, 
"u 'string' - 11 - s c - - 0 - delim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trim",444,G__dictionary_504_0_17, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - str u 'string' - 11 '\" \\t\\n\"' whitespace", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sanitize",871,G__dictionary_504_0_18, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - nodePath", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dictionary_504_0_19, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - nodePath", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tagName",701,G__dictionary_504_0_20, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - nName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("attributeName",1365,G__dictionary_504_0_21, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - nName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vectorFromString",1694,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<string>"), 0, 1, 1, 2, 0, "u 'string' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("split",556,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<string>"), 1, 3, 1, 2, 0, 
"u 'string' - 11 - s c - - 0 - delim "
"u 'vector<string,allocator<string> >' 'vector<string>' 1 - elems", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("attributes",1095,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), G__defined_typename("map<string,string>"), 0, 1, 1, 2, 0, "U 'TXMLNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~XmlConfig", 1029, G__dictionary_504_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncjdbcLcLReporter(void) {
   /* jdb::Reporter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLReporter));
   G__memfunc_setup("Reporter",851,G__dictionary_527_0_1, 105, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLReporter), -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - filename i - - 0 '791' w "
"i - - 0 '1024' h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reporter",851,G__dictionary_527_0_2, 105, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLReporter), -1, 0, 3, 1, 1, 0, 
"U 'jdb::XmlConfig' - 0 - config u 'string' - 0 - np "
"u 'string' - 0 '\"\"' prefix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("newPage",711,G__dictionary_527_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '1' dx i - - 0 '1' dy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cd",199,G__dictionary_527_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cd",199,G__dictionary_527_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - padX i - - 0 - padY", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("next",447,G__dictionary_527_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("savePage",812,G__dictionary_527_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveImage",914,G__dictionary_527_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Reporter", 851, G__dictionary_527_0_9, (int) ('i'), G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLReporter), -1, 0, 1, 1, 1, 0, "u 'jdb::Reporter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Reporter", 977, G__dictionary_527_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dictionary_527_0_11, (int) ('u'), G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLReporter), -1, 1, 1, 1, 1, 0, "u 'jdb::Reporter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncjdbcLcLChainLoader(void) {
   /* jdb::ChainLoader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLChainLoader));
   G__memfunc_setup("load",416,G__dictionary_611_0_1, 121, -1, -1, 0, 3, 3, 1, 0, 
"U 'TChain' - 0 - chain u 'string' - 0 - ntdir "
"i - - 0 '-1' maxFiles", (char*)NULL, (void*) G__func2void( (void (*)(TChain*, string, int))(&jdb::ChainLoader::load) ), 0);
   G__memfunc_setup("loadList",828,G__dictionary_611_0_2, 121, -1, -1, 0, 3, 3, 1, 0, 
"U 'TChain' - 0 - chain u 'string' - 0 - listFile "
"i - - 0 '-1' maxFiles", (char*)NULL, (void*) G__func2void( (void (*)(TChain*, string, int))(&jdb::ChainLoader::loadList) ), 0);
   // automatic default constructor
   G__memfunc_setup("ChainLoader", 1082, G__dictionary_611_0_3, (int) ('i'), G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLChainLoader), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ChainLoader", 1082, G__dictionary_611_0_4, (int) ('i'), G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLChainLoader), -1, 0, 1, 1, 1, 0, "u 'jdb::ChainLoader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ChainLoader", 1208, G__dictionary_611_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dictionary_611_0_6, (int) ('u'), G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLChainLoader), -1, 1, 1, 1, 1, 0, "u 'jdb::ChainLoader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncjdbcLcLTaskTimer(void) {
   /* jdb::TaskTimer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLTaskTimer));
   G__memfunc_setup("start",558,G__dictionary_615_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("elapsed",734,G__dictionary_615_0_2, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("TaskTimer", 916, G__dictionary_615_0_3, (int) ('i'), G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLTaskTimer), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TaskTimer", 916, G__dictionary_615_0_4, (int) ('i'), G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLTaskTimer), -1, 0, 1, 1, 1, 0, "u 'jdb::TaskTimer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TaskTimer", 1042, G__dictionary_615_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dictionary_615_0_6, (int) ('u'), G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLTaskTimer), -1, 1, 1, 1, 1, 0, "u 'jdb::TaskTimer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncjdbcLcLTaskProgress(void) {
   /* jdb::TaskProgress */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLTaskProgress));
   G__memfunc_setup("TaskProgress",1256,G__dictionary_616_0_1, 105, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLTaskProgress), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TaskProgress",1256,G__dictionary_616_0_2, 105, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLTaskProgress), -1, 0, 5, 1, 1, 0, 
"u 'string' - 0 - title i - - 0 '100' max "
"i - - 0 '60' width g - - 0 'true' sTitle "
"g - - 0 'true' sElapse", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("showProgress",1302,G__dictionary_616_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TaskProgress", 1256, G__dictionary_616_0_4, (int) ('i'), G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLTaskProgress), -1, 0, 1, 1, 1, 0, "u 'jdb::TaskProgress' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TaskProgress", 1382, G__dictionary_616_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dictionary_616_0_6, (int) ('u'), G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLTaskProgress), -1, 1, 1, 1, 1, 0, "u 'jdb::TaskProgress' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncjdbcLcLHistoBins(void) {
   /* jdb::HistoBins */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBins));
   G__memfunc_setup("makeNBins",888,G__dictionary_617_0_1, 117, G__get_linked_tagnum(&G__dictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 3, 3, 1, 0, 
"i - - 0 - nBins d - - 0 - low "
"d - - 0 - high", "binsFrom", (void*) G__func2void( (vector<double> (*)(int, double, double))(&jdb::HistoBins::makeNBins) ), 0);
   G__memfunc_setup("makeFixedWidthBins",1818,G__dictionary_617_0_2, 117, G__get_linked_tagnum(&G__dictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 3, 3, 1, 0, 
"d - - 0 - binWidth d - - 0 - low "
"d - - 0 - high", "binsFrom", (void*) G__func2void( (vector<double> (*)(double, double, double))(&jdb::HistoBins::makeFixedWidthBins) ), 0);
   G__memfunc_setup("findBin",698,G__dictionary_617_0_3, 105, -1, -1, 0, 2, 3, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - bins d - - 0 - val", "findBin", (void*) G__func2void( (int (*)(vector<double>&, double))(&jdb::HistoBins::findBin) ), 0);
   G__memfunc_setup("findBin",698,G__dictionary_617_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - val", "findBin", (void*) NULL, 0);
   G__memfunc_setup("length",642,G__dictionary_617_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dictionary_617_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nBins",506,G__dictionary_617_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HistoBins",915,G__dictionary_617_0_8, 105, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBins), -1, 0, 3, 1, 1, 0, 
"d - - 0 - min d - - 0 - max "
"d - - 0 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HistoBins",915,G__dictionary_617_0_9, 105, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBins), -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 0 - bins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HistoBins",915,G__dictionary_617_0_10, 105, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBins), -1, 0, 3, 1, 1, 0, 
"U 'jdb::XmlConfig' - 0 - config u 'string' - 0 - nodePath "
"u 'string' - 0 '\"\"' mod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dictionary_617_0_11, 100, -1, -1, 1, 1, 1, 1, 0, "i - - 10 - nIndex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("toString",858,G__dictionary_617_0_12, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("HistoBins", 915, G__dictionary_617_0_13, (int) ('i'), G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBins), -1, 0, 1, 1, 1, 0, "u 'jdb::HistoBins' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HistoBins", 1041, G__dictionary_617_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dictionary_617_0_15, (int) ('u'), G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBins), -1, 1, 1, 1, 1, 0, "u 'jdb::HistoBins' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncjdbcLcLHistoBook(void) {
   /* jdb::HistoBook */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBook));
   G__memfunc_setup("makeNBins",888,G__dictionary_703_0_1, 117, G__get_linked_tagnum(&G__dictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 3, 3, 1, 0, 
"i - - 0 - nBins d - - 0 - low "
"d - - 0 - high", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int, double, double))(&jdb::HistoBook::makeNBins) ), 0);
   G__memfunc_setup("makeFixedWidthBins",1818,G__dictionary_703_0_2, 117, G__get_linked_tagnum(&G__dictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 3, 3, 1, 0, 
"d - - 0 - binWidth d - - 0 - low "
"d - - 0 - high", (char*)NULL, (void*) G__func2void( (vector<double> (*)(double, double, double))(&jdb::HistoBook::makeFixedWidthBins) ), 0);
   G__memfunc_setup("findBin",698,G__dictionary_703_0_3, 105, -1, -1, 0, 2, 3, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - bins d - - 0 - value", (char*)NULL, (void*) G__func2void( (int (*)(vector<double>&, double))(&jdb::HistoBook::findBin) ), 0);
   G__memfunc_setup("HistoBook",914,G__dictionary_703_0_4, 105, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBook), -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 '\"\"' input "
"u 'string' - 0 '\"\"' inDir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HistoBook",914,G__dictionary_703_0_5, 105, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBook), -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - name U 'jdb::XmlConfig' - 0 - config "
"u 'string' - 0 '\"\"' input u 'string' - 0 '\"\"' inDir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cd",199,G__dictionary_703_0_6, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 '\"/\"' dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_703_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name U 'TH1' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get",320,G__dictionary_703_0_8, 85, G__get_linked_tagnum(&G__dictionaryLN_TH1), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 '\"\"' sdir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get2D",438,G__dictionary_703_0_9, 85, G__get_linked_tagnum(&G__dictionaryLN_TH2), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 '\"\"' sdir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get3D",439,G__dictionary_703_0_10, 85, G__get_linked_tagnum(&G__dictionaryLN_TH3), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 '\"\"' sdir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__dictionary_703_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - name d - - 0 - bin "
"d - - 0 '1' weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("make1F",533,G__dictionary_703_0_12, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 - title "
"i - - 0 - nBins d - - 0 - low "
"d - - 0 - hi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("make1D",531,G__dictionary_703_0_13, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 - title "
"i - - 0 - nBins d - - 0 - low "
"d - - 0 - hi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("make1D",531,G__dictionary_703_0_14, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 - title "
"i - - 0 - nBins D - 'Double_t' 10 - bins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("make2D",532,G__dictionary_703_0_15, 121, -1, -1, 0, 8, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 - title "
"i - - 0 - nBinsX d - - 0 - lowX "
"d - - 0 - hiX i - - 0 - nBinsY "
"d - - 0 - lowY d - - 0 - hiY", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("make2D",532,G__dictionary_703_0_16, 121, -1, -1, 0, 7, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 - title "
"i - - 0 - nBinsX D - 'Double_t' 10 - xBins "
"i - - 0 - nBinsY d - - 0 - lowY "
"d - - 0 - hiY", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("make2D",532,G__dictionary_703_0_17, 121, -1, -1, 0, 7, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 - title "
"i - - 0 - nBinsX d - - 0 - x1 "
"d - - 0 - x2 i - - 0 - nBinsY "
"D - 'Double_t' 10 - yBins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("make2D",532,G__dictionary_703_0_18, 121, -1, -1, 0, 6, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 - title "
"i - - 0 - nBinsX D - 'Double_t' 10 - xBins "
"i - - 0 - nBinsY D - 'Double_t' 10 - yBins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("make",414,G__dictionary_703_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'jdb::XmlConfig' - 0 - config u 'string' - 0 - nodeName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("make",414,G__dictionary_703_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - nodeName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeAll",695,G__dictionary_703_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - nodeName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeAll",695,G__dictionary_703_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'jdb::XmlConfig' - 0 - config u 'string' - 0 - nodeName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,G__dictionary_703_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - existing u 'string' - 0 - create", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLegend",911,G__dictionary_703_0_24, 85, G__get_linked_tagnum(&G__dictionaryLN_TLegend), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("draw",430,G__dictionary_703_0_25, 85, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBook), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 '\"\"' name C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearLegend",1110,G__dictionary_703_0_26, 85, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBook), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDirectory",1269,G__dictionary_703_0_27, 85, G__get_linked_tagnum(&G__dictionaryLN_TDirectory), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("save",431,G__dictionary_703_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("style",561,G__dictionary_703_0_29, 85, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBook), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - hName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__dictionary_703_0_30, 85, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBook), -1, 0, 5, 1, 1, 0, 
"u 'string' - 0 - param u 'string' - 0 - p1 "
"u 'string' - 0 '\"\"' p2 u 'string' - 0 '\"\"' p3 "
"u 'string' - 0 '\"\"' p4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__dictionary_703_0_31, 85, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBook), -1, 0, 5, 1, 1, 0, 
"u 'string' - 0 - param d - - 0 - p1 "
"d - - 0 '-1' p2 d - - 0 '-1' p3 "
"d - - 0 '-1' p4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__dictionary_703_0_32, 85, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBook), -1, 0, 2, 1, 1, 0, 
"U 'jdb::XmlConfig' - 0 - config u 'string' - 0 - nodePath", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__dictionary_703_0_33, 85, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBook), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - nodePath", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__dictionary_703_0_34, 85, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBook), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - opt u 'vector<string,allocator<string> >' 'vector<string>' 0 - nodePath", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("exportAs",854,G__dictionary_703_0_35, 85, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBook), -1, 0, 1, 1, 1, 0, "u 'string' - 0 '\"\"' filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("exists",672,G__dictionary_703_0_36, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 '\"\"' sdir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("color",543,G__dictionary_703_0_37, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("globalStyle",1154,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("placeLegend",1108,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBook), -1, 0, 4, 1, 4, 0, 
"i - - 0 - alignmentX i - - 0 - alignmentY "
"d - - 0 '-1' width d - - 0 '-1' height", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("loadRootDir",1123,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TDirectory' - 0 - - u 'string' - 0 '\"\"' path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sParam",612,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 3, 1, 4, 0, 
"u 'vector<string,allocator<string> >' 'vector<string>' 0 - params i - - 0 - p "
"u 'string' - 0 '\"\"' def", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cParam",596,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 3, 1, 4, 0, 
"u 'vector<string,allocator<string> >' 'vector<string>' 0 - params i - - 0 - p "
"u 'string' - 0 '\"\"' def", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dParam",597,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 3, 1, 4, 0, 
"u 'vector<string,allocator<string> >' 'vector<string>' 0 - params i - - 0 - p "
"d - - 0 '0' def", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("HistoBook", 914, G__dictionary_703_0_44, (int) ('i'), G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBook), -1, 0, 1, 1, 1, 0, "u 'jdb::HistoBook' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HistoBook", 1040, G__dictionary_703_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dictionary_703_0_46, (int) ('u'), G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLHistoBook), -1, 1, 1, 1, 1, 0, "u 'jdb::HistoBook' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncjdbcLcLLoggerConfig(void) {
   /* jdb::LoggerConfig */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLLoggerConfig));
   G__memfunc_setup("LoggerConfig",1206,G__dictionary_711_0_1, 105, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLLoggerConfig), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeLogger",1022,G__dictionary_711_0_2, 85, G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLLogger), -1, 0, 2, 3, 1, 0, 
"U 'jdb::XmlConfig' - 0 - config u 'string' - 0 - nodePath", (char*)NULL, (void*) G__func2void( (jdb::Logger* (*)(jdb::XmlConfig*, string))(&jdb::LoggerConfig::makeLogger) ), 0);
   // automatic copy constructor
   G__memfunc_setup("LoggerConfig", 1206, G__dictionary_711_0_3, (int) ('i'), G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLLoggerConfig), -1, 0, 1, 1, 1, 0, "u 'jdb::LoggerConfig' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LoggerConfig", 1332, G__dictionary_711_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dictionary_711_0_5, (int) ('u'), G__get_linked_tagnum(&G__dictionaryLN_jdbcLcLLoggerConfig), -1, 1, 1, 1, 1, 0, "u 'jdb::LoggerConfig' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncdictionary() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globaldictionary() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcdictionary() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__dictionaryLN_TDirectory = { "TDirectory" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_jdb = { "jdb" , 110 , -1 };
G__linked_taginfo G__dictionaryLN_jdbcLcLLogger = { "jdb::Logger" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_jdbcLcLLoggercLcLNullStream = { "jdb::Logger::NullStream" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__dictionaryLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_TLegend = { "TLegend" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_TXMLNode = { "TXMLNode" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_TXMLDocument = { "TXMLDocument" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_jdbcLcLXmlConfig = { "jdb::XmlConfig" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR = { "map<string,bool,less<string>,allocator<pair<const string,bool> > >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator = { "map<string,string,less<string>,allocator<pair<const string,string> > >::iterator" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_jdbcLcLReporter = { "jdb::Reporter" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__dictionaryLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_jdbcLcLChainLoader = { "jdb::ChainLoader" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_jdbcLcLTaskTimer = { "jdb::TaskTimer" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_jdbcLcLTaskProgress = { "jdb::TaskProgress" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_jdbcLcLHistoBins = { "jdb::HistoBins" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_TH3 = { "TH3" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_jdbcLcLHistoBook = { "jdb::HistoBook" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR = { "map<string,TH1*,less<string>,allocator<pair<const string,TH1*> > >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_jdbcLcLLoggerConfig = { "jdb::LoggerConfig" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtabledictionary() {
  G__dictionaryLN_TDirectory.tagnum = -1 ;
  G__dictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__dictionaryLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__dictionaryLN_string.tagnum = -1 ;
  G__dictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__dictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__dictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictionaryLN_jdb.tagnum = -1 ;
  G__dictionaryLN_jdbcLcLLogger.tagnum = -1 ;
  G__dictionaryLN_jdbcLcLLoggercLcLNullStream.tagnum = -1 ;
  G__dictionaryLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__dictionaryLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__dictionaryLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictionaryLN_TCanvas.tagnum = -1 ;
  G__dictionaryLN_TLegend.tagnum = -1 ;
  G__dictionaryLN_TXMLNode.tagnum = -1 ;
  G__dictionaryLN_TXMLDocument.tagnum = -1 ;
  G__dictionaryLN_jdbcLcLXmlConfig.tagnum = -1 ;
  G__dictionaryLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR.tagnum = -1 ;
  G__dictionaryLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__dictionaryLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__dictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictionaryLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__dictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictionaryLN_jdbcLcLReporter.tagnum = -1 ;
  G__dictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__dictionaryLN_TFile.tagnum = -1 ;
  G__dictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__dictionaryLN_TH1.tagnum = -1 ;
  G__dictionaryLN_TChain.tagnum = -1 ;
  G__dictionaryLN_jdbcLcLChainLoader.tagnum = -1 ;
  G__dictionaryLN_jdbcLcLTaskTimer.tagnum = -1 ;
  G__dictionaryLN_jdbcLcLTaskProgress.tagnum = -1 ;
  G__dictionaryLN_jdbcLcLHistoBins.tagnum = -1 ;
  G__dictionaryLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__dictionaryLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__dictionaryLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__dictionaryLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__dictionaryLN_TH2.tagnum = -1 ;
  G__dictionaryLN_TH3.tagnum = -1 ;
  G__dictionaryLN_jdbcLcLHistoBook.tagnum = -1 ;
  G__dictionaryLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR.tagnum = -1 ;
  G__dictionaryLN_jdbcLcLLoggerConfig.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtabledictionary() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TDirectory);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_string);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_jdb);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictionaryLN_jdbcLcLLogger),sizeof(jdb::Logger),-1,98560,(char*)NULL,G__setup_memvarjdbcLcLLogger,G__setup_memfuncjdbcLcLLogger);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_jdbcLcLLoggercLcLNullStream);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TLegend);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TXMLNode);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TXMLDocument);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictionaryLN_jdbcLcLXmlConfig),sizeof(jdb::XmlConfig),-1,99328,(char*)NULL,G__setup_memvarjdbcLcLXmlConfig,G__setup_memfuncjdbcLcLXmlConfig);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictionaryLN_jdbcLcLReporter),sizeof(jdb::Reporter),-1,99328,(char*)NULL,G__setup_memvarjdbcLcLReporter,G__setup_memfuncjdbcLcLReporter);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TFile);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TH1);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TChain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictionaryLN_jdbcLcLChainLoader),sizeof(jdb::ChainLoader),-1,65536,(char*)NULL,G__setup_memvarjdbcLcLChainLoader,G__setup_memfuncjdbcLcLChainLoader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictionaryLN_jdbcLcLTaskTimer),sizeof(jdb::TaskTimer),-1,65536,(char*)NULL,G__setup_memvarjdbcLcLTaskTimer,G__setup_memfuncjdbcLcLTaskTimer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictionaryLN_jdbcLcLTaskProgress),sizeof(jdb::TaskProgress),-1,98560,(char*)NULL,G__setup_memvarjdbcLcLTaskProgress,G__setup_memfuncjdbcLcLTaskProgress);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictionaryLN_jdbcLcLHistoBins),sizeof(jdb::HistoBins),-1,99328,(char*)NULL,G__setup_memvarjdbcLcLHistoBins,G__setup_memfuncjdbcLcLHistoBins);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TH2);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TH3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictionaryLN_jdbcLcLHistoBook),sizeof(jdb::HistoBook),-1,295936,(char*)NULL,G__setup_memvarjdbcLcLHistoBook,G__setup_memfuncjdbcLcLHistoBook);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictionaryLN_jdbcLcLLoggerConfig),sizeof(jdb::LoggerConfig),-1,66816,(char*)NULL,G__setup_memvarjdbcLcLLoggerConfig,G__setup_memfuncjdbcLcLLoggerConfig);
}
extern "C" void G__cpp_setupdictionary(void) {
  G__check_setup_version(30051515,"G__cpp_setupdictionary()");
  G__set_cpp_environmentdictionary();
  G__cpp_setup_tagtabledictionary();

  G__cpp_setup_inheritancedictionary();

  G__cpp_setup_typetabledictionary();

  G__cpp_setup_memvardictionary();

  G__cpp_setup_memfuncdictionary();
  G__cpp_setup_globaldictionary();
  G__cpp_setup_funcdictionary();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncdictionary();
  return;
}
class G__cpp_setup_initdictionary {
  public:
    G__cpp_setup_initdictionary() { G__add_setup_func("dictionary",(G__incsetup)(&G__cpp_setupdictionary)); G__call_setup_funcs(); }
   ~G__cpp_setup_initdictionary() { G__remove_setup_func("dictionary"); }
};
G__cpp_setup_initdictionary G__cpp_setup_initializerdictionary;

